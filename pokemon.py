# -*- coding: utf-8 -*-
"""Pokemon.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mng4XMxHpZw6BzYInWAgOe17s2nYT2p-
"""

#importar pandas
import pandas as pd

df=pd.read_csv("Pokemon.csv")

df

type_1_counts = df['Type 1'].value_counts().head(1)
type_2_counts = df['Type 2'].value_counts().head(1)

print(f"El primero con mayor frecuencia: {type_1_counts.index[0]}, count: {type_1_counts.values[0]}")
print(f"El Segundo con mayor frecuencia: {type_2_counts.index[0]}, count: {type_2_counts.values[0]}")

#Distribuccion hp (niveles) Pokemons
bins = [0, 50, 100, df['HP'].max()]
labels = ['0-50', '50-100', '100-max']

df['HP_bins'] = pd.cut(df['HP'], bins=bins, labels=labels)

hp_distribution = df['HP_bins'].value_counts()

print(hp_distribution)

#Cual es el pokemon con mayor estadisticas y cual menor (total)?

df_sorted = df.sort_values('Total', ascending=False)
highest_total_pokemon = df_sorted.iloc[0]['Name']

lowest_total_pokemon = df_sorted.iloc[-1]['Name']

print(f"Mejor Pokemon: {highest_total_pokemon}")
print(f"Peor Pokemon: {lowest_total_pokemon}")

#porcentaje de legendarios y no legendarios (legendary)

legendary = len(df[df['Legendary'] == True])
non_legendary = len(df[df['Legendary'] == False])

total_pokemon = len(df)
legendaryporcentaje = (legendary / total_pokemon) * 100
non_legendaryporcentaje = (non_legendary / total_pokemon) * 100

print(f"Porcentaje de Legendarios: {legendaryporcentaje:.2f}%")
print(f"Porcentaje de No Legendarios: {non_legendaryporcentaje:.2f}%")